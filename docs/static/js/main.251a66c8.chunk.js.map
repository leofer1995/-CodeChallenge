{"version":3,"sources":["components/quizScreen/QuizScreen.module.css","components/resultScreen/ResultScreen.module.css","components/homeScreen/HomeScreen.module.css","utiles/quizImg.svg","components/homeScreen/HomeScreen.jsx","components/quizScreen/QuizScreen.jsx","actions/index.js","hooks/useFetch.js","utiles/perfect.svg","utiles/good.svg","utiles/loser.svg","components/resultScreen/ResultScreen.jsx","App.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","HomeScreen","className","styles","container","card","src","quizImg","alt","to","connect","correct","type","next","obj","payload","url","useState","loading","data","setData","useEffect","fetch","then","response","json","answer","useFetch","setAnswer","results","category","correct_answer","question","handleResponse","target","name","length","he","decode","contButton","true","onClick","false","reset","responses","perfect","good","loser","map","state","exact","path","initialState","rootReducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.251a66c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuizScreen_container__209lE\",\"card\":\"QuizScreen_card__2c2VL\",\"contButton\":\"QuizScreen_contButton__2hwgG\",\"true\":\"QuizScreen_true__3tF1R\",\"false\":\"QuizScreen_false__X6-VV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResultScreen_container__3tsyS\",\"card\":\"ResultScreen_card__6bl--\",\"responses\":\"ResultScreen_responses__NldmT\",\"true\":\"ResultScreen_true__PCOdl\",\"false\":\"ResultScreen_false__2jbRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeScreen_container__19jkM\",\"card\":\"HomeScreen_card__2T-cJ\"};","export default __webpack_public_path__ + \"static/media/quizImg.59c032de.svg\";","import quizImg from '../../utiles/quizImg.svg';\r\nimport styles from './HomeScreen.module.css';\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const HomeScreen = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Welcome to the Trivia Challenge!</h1>\r\n            <hr />\r\n\r\n            <div className={styles.card}>\r\n                <img src={quizImg} alt='quiz'/>               \r\n                <p>You will be presented with 10 True or False questions.</p>               \r\n            </div>\r\n\r\n            <Link to='/Quiz'>\r\n                <button>BEGIN</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport he from 'he';\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { next, correct } from \"../../actions\";\r\n\r\nimport styles from './QuizScreen.module.css'\r\n\r\nconst QuizScreen = ({correct, next}) => {\r\n    const {loading, data} = useFetch('https://opentdb.com/api.php?amount=10&difficulty=hard&type=boolean');\r\n    const [answer, setAnswer] = useState(0);\r\n\r\n    const {\r\n        category,\r\n        correct_answer,\r\n        question\r\n    } = !!data && data.results[answer]\r\n    \r\n\r\n    //Envio respuesta al action y si es correcta envio al action\r\n    const handleResponse = ({target}) => {\r\n        next({\r\n            question,\r\n            correct_answer,\r\n            response:target.name\r\n        });\r\n\r\n        setAnswer(answer + 1);\r\n        \r\n        if(correct_answer === target.name){\r\n            correct();\r\n        };\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {loading && \r\n            <div>\r\n                <p>Loading ...</p>\r\n            </div>\r\n        }\r\n        {!loading &&\r\n            <div className={styles.container}>\r\n\r\n                <h1>{category}</h1>\r\n                <hr />\r\n\r\n                <p>{answer+1}/{data.results.length}</p>\r\n\r\n                <div className={styles.card}>\r\n                    <p>{he.decode(question)}</p>               \r\n                </div>\r\n\r\n                <div className={styles.contButton}>\r\n                    <button \r\n                        className={styles.true}\r\n                        onClick={handleResponse}\r\n                        name='True'\r\n                    >\r\n                        ✓\r\n                    </button>\r\n\r\n                    <button\r\n                        className={styles.false}\r\n                        onClick={handleResponse}\r\n                        name='False'\r\n                    >\r\n                        ✘\r\n                    </button>\r\n                </div>\r\n    \r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, {correct, next})(QuizScreen)\r\n","//Aumenta cantidad de respuestas correctas\r\nexport const correct = () => {\r\n    return {\r\n        type:'CORRECT',\r\n    }\r\n} \r\n//Ingresa pregunta con respuesta al store\r\nexport const next = (obj) => {\r\n    return {\r\n        type:'NEXT',\r\n        payload:obj,\r\n    }\r\n}\r\n//resetea el store\r\nexport const reset = () => {\r\n    return {\r\n        type:'RESET',\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\n\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const [data, setData] = useState({\r\n        loading:true,\r\n        data:null,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(answer => {\r\n            setData({\r\n                loading:false,\r\n                data:answer,\r\n            })\r\n        })\r\n    },[url]);\r\n\r\n    return data\r\n}","export default __webpack_public_path__ + \"static/media/perfect.c810612d.svg\";","export default __webpack_public_path__ + \"static/media/good.da7f4db7.svg\";","export default __webpack_public_path__ + \"static/media/loser.5cd583df.svg\";","import styles from './ResultScreen.module.css'\r\nimport perfect from '../../utiles/perfect.svg'\r\nimport good from '../../utiles/good.svg'\r\nimport loser from '../../utiles/loser.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport he from 'he'\r\nimport { connect } from 'react-redux'\r\nimport { reset } from '../../actions'\r\n\r\nconst ResultScreen = ({responses, correct, reset}) => {\r\n\r\n    //Reseteo mi store de redux\r\n    const handleReset = () => {\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Your scored</h1>\r\n            <h1>{correct}/{responses.length}</h1>\r\n            <hr />\r\n\r\n            <div className={styles.card}>\r\n                <img src={correct===10?perfect:correct>=7?good:loser} alt='quiz'/>                           \r\n            </div>\r\n            \r\n            <div className={styles.responses}>\r\n                {responses.map(({correct_answer,response,question}) => \r\n                    <div className={correct_answer === response ? styles.true : styles.false}>\r\n                        <p>{he.decode(question)}</p>\r\n                    </div>\r\n                )} \r\n            </div> \r\n\r\n            <Link to='/'>\r\n                <button onClick={handleReset}>PLAY AGAIN</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {reset})(ResultScreen)","import {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\r\nimport { HomeScreen } from './components/homeScreen/HomeScreen.jsx';\r\nimport QuizScreen from './components/quizScreen/QuizScreen';\r\nimport ResultScreen  from './components/resultScreen/ResultScreen';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\n\r\nconst App = ({correct, responses}) => {\r\n    return(\r\n        <Router>\r\n            <Route exact path = '/'>\r\n                <HomeScreen />\r\n            </Route>\r\n\r\n            <Route exact path = '/Quiz'>\r\n                {responses.length !== 10 ?\r\n                    <QuizScreen />:\r\n                    <Redirect to='/Result'/>\r\n                }\r\n            </Route>\r\n\r\n            <Route exact path = '/Result'>\r\n                {responses.length === 10?\r\n                    <ResultScreen responses={responses} correct={correct}/>:\r\n                    <Redirect to='/'/>\r\n                }\r\n            </Route>\r\n\r\n        </Router>\r\n    );\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        correct:state.correct,\r\n        responses:state.responses,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(App)","const initialState = {\r\n    correct : 0,\r\n    responses : [],\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n\r\n    if(action.type === 'CORRECT'){\r\n        return {\r\n            ...state,\r\n            correct : state.correct + 1\r\n        }\r\n    }\r\n\r\n    if(action.type === 'NEXT'){\r\n        return {\r\n            ...state,\r\n            responses: [...state.responses, action.payload],\r\n        }\r\n    }\r\n\r\n    if(action.type === 'RESET'){\r\n        return {\r\n            correct:0,\r\n            responses:[],\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default rootReducer","import {createStore} from 'redux';\r\n\r\n\r\nimport rootReducer from '../reducers';\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n\r\n);\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport  App  from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store = { store }>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}